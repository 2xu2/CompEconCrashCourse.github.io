---
title: "Computational Crash Course for Economics PhD Students, Summer 2024 (UMN)"
Author: "Adam A. Oppenheimer & Xing Xu"
# bibliography: CourseBibliography.bib
---

Disclaimer: this site is a work in progress!

Welcome to the 2024 summer course on computational economics at UMN! It will be a 3-week crash course consisting of 2 Julia and 2 Python lectures each week. The Julia lectures will be taught by Xing Xu and the Python lectures will be taught by Adam Oppenheimer. Find the detailed syllabus and information below. 

All the notebooks for lectures and assignments can be downloaded from [Github repo](https://github.com/CompEconCrashCourse/CompEconCrashCourse.github.io). 

## Course Overview

The course offerings are strategically designed to cater to varying interests and skill levels. The lectures on Julia will primarily concentrate on computational methods, demonstrating their applications across a range of classical economic models. This will involve hands-on practice with coding and implementing algorithms that are pivotal to economic analysis.

In contrast, the Python lectures are tailored to those new to programming. These sessions will focus on establishing a solid foundation in programming basics. Students will progressively build their skill set, culminating in the ability to tackle simple dynamic programming models. This structured approach ensures a gentle learning curve, making these lectures ideal for those who are just starting their journey in programming.

Both courses are structured as introductory, requiring no prior experience in programming. This accessibility is key to encouraging participation among lower year graduate students. While the courses are comprehensive, they intentionally do not delve into advanced methodologies found at the cutting edge of computational economics. Such topics are reserved for the official computational field courses offered later in the curriculum.

It's important to note that the skills developed in these classes are broadly applicable and will provide a strong foundation for those interested in advancing to more specialized computational sequences. However, students already familiar with basic or intermediate programming may find the pace introductory. Thus, senior students might prefer to direct their attention towards more advanced courses that align with their existing skill levels.

## Schedule

The class will last three weeks from ***June 3rd - June 21st, 2024***. There will be 6 lectures and accompanied problem sets for each language.

Here is the proposed timeline of the lectures. All lectures will be from 9:30 am - 11:00 am CDT.

| Julia Lectures | Dates |
| ---------- | -------- |
| [Julia Fundamentals](Julia/Lectures/Julia_Lec_1_Compecon_Xing_Xu.ipynb) | Tuesday, June 4th |
| [Neoclassical growth model (RBC)](Julia/Lectures/Julia_Lec_2_Compecon_Xing_Xu.ipynb) | Thursday, June 6th |
| [McCall's Job search model ](Julia/Lectures/Julia_Lec_3_Compecon_Xing_Xu.ipynb) | Tuesday, June 11th |
| [Incomplete market model with heterogeneous household](Julia/Lectures/Julia_Lec_4_Compecon_Xing_Xu.ipynb) | Thursday, June 13th |
| [Firm dynamics with an example of exporter dynamics](Julia/Lectures/Julia_Lec_5_Compecon_Xing_Xu.ipynb) | Tuesday, June 18th |
| Lecture 6 (topic yet to be decided)| Thursday, June 20th | 
(To get started with the Julia lectures, please set up with [Quantecon tutorial](https://julia.quantecon.org/getting_started_julia/getting_started.html#))

| Python Lectures | Dates |
| ---------- | -------- |
| [Basics: Conditionals, Loops, Functions, etc.](Python/Lectures/lecture1.ipynb) | Monday, June 3rd |
| [Nesting, Scope, and Lists](Python/Lectures/lecture2.ipynb) | Wednesday, June 5th |
| [Tips & Tricks](Python/Lectures/lecture3.ipynb) | Monday, June 10th |
| [Classes and Queues](Python/Lectures/lecture4.ipynb) | Wednesday, June 12th |
| [Numpy](Python/Lectures/lecture5.ipynb) | Monday, June 17th |
| Pandas | Wednesday, June 19th | 

## Office Hours

We will provide links to sign up for weekly office hours.

## Assignments

Here are the links to the assignments:

| Julia Assignments | Due Dates |
| ---------- | -------- |
| [Assignment 1](Julia/Assignments/Julia_PS_1_Compecon_Xing_Xu.ipynb) | June 10th |
| [Assignment 2](Julia/Assignments/Julia_PS_2_Compecon_Xing_Xu.ipynb) | June 12th |
| Assignment 3 | June 17th  |
| Assignment 4 | June 19th |
| Assignment 5 | June 24th |
| Assignment 6 | June 26th | 

| Python Assignments | Due Dates |
| ---------- | -------- |
| [Assignment 1](https://www.classes.cs.uchicago.edu/archive/2019/fall/12100-1/pa/pa1/index.html) | June 5th |
| [Assignment 2](https://www.classes.cs.uchicago.edu/archive/2019/fall/12100-1/pa/pa2/index.html) | June 10th |
| [Assignment 3](https://www.classes.cs.uchicago.edu/archive/2019/fall/12100-1/pa/pa3/index.html) | June 12th  |
| [Assignment 4](https://www.classes.cs.uchicago.edu/archive/2019/fall/12100-1/pa/pa4/index.html) | June 17th |
| [Assignment 5](https://www.classes.cs.uchicago.edu/archive/2019/fall/12100-1/pa/pa5/index.html) | June 19th |
| Assignment 6 | June 24th | 

